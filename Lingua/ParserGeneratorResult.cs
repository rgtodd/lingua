/* Copyright (c) 2009 Richard G. Todd.
 * Licensed under the terms of the Microsoft Public License (Ms-PL).
 */

using System.Collections.Generic;

namespace Lingua
{
    /// <summary>
    /// Defines the output generated by an <see cref="IParserGenerator" />.
    /// </summary>
    public class ParserGeneratorResult
    {
        #region Fields

        private IParser m_parser;
        private List<ParserGeneratorParserConflict> m_conflicts = new List<ParserGeneratorParserConflict>();

        #endregion

        #region Constructors

        /// <summary>
        /// Initializes a new instance of the <see cref="ParserGeneratorResult"/> class.
        /// </summary>
        /// <param name="parser">The <see cref="IParser"/> created by the <see cref="IParserGenerator"/>.</param>
        /// <param name="conflicts">The collection of <see cref="ParserGeneratorParserConflict"/> objects desribing the rule conflicts identified by the <see cref="IParserGenerator"/>.</param>
        public ParserGeneratorResult(IParser parser, IEnumerable<ParserGeneratorParserConflict> conflicts)
        {
            m_parser = parser;
            m_conflicts.AddRange(conflicts);
        }

        #endregion

        #region Public Properties

        /// <summary>
        /// Gets the <see cref="IParser"/> created by the <see cref="IParserGenerator"/>.
        /// </summary>
        public IParser Parser
        {
            get { return m_parser; }
        }

        /// <summary>
        /// Gets the collection of <see cref="ParserGeneratorParserConflict"/> objects desribing the rule conflicts identified by the <see cref="IParserGenerator"/>.
        /// </summary>
        public List<ParserGeneratorParserConflict> Conflicts
        {
            get { return m_conflicts; }
        }

        #endregion
    }
}
